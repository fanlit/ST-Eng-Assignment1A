#!/bin/bash
#
#########
# Setup #
#########

SUBJFILE='/etc/ssh/sshd_config'
KEY='Protocol'
REQ='1C. Ensure SSH Protocol is set to 2'
STDOUTLOGFILE=$1

#############################
# 1: Subject file not found #
#############################
if [ ! -f "$SUBJFILE" ]
then
        echo "[FAIL] $REQ, sshd_config not found. SSH service cannot be started" >> "$STDOUTLOGFILE"
	exit 1
fi

####################
# 2: Key not found #
####################
if [ $( grep -i "^\s*$KEY($|\s+)" "$SUBJFILE" | wc -l) -eq 0 ]
then
	echo "[FAIL] $REQ, $KEY cannot be found" >> "$STDOUTLOGFILE"
	exit 1
fi

##########################
# 3: No associated value #
##########################
CMDOUT=$( grep -i "^\s*$KEY\s*" "$SUBJFILE" | head -1 | grep -iP "^\s*$KEY\s*(#.*)*$" | wc -l)
if [ "$CMDOUT" -ne 0 ]
then
	echo "[FAIL] $REQ, $KEY has no value. SSH service cannot be started" >> "$STDOUTLOGFILE"
	exit 1
fi

######################
# 4. Multiple values #
######################
CMDOUT=$(grep -iE "^\s*$KEY\s+" $SUBJFILE | head -1 | sed 's/#.*//' | sed 's/\s*,\s*/,/g' | grep -iP "^\s*$KEY\s+\S+\s+\S+" | wc -l)
if [ "$CMDOUT" -ne 0  ]
then
        echo "[FAIL] $REQ, $KEY has multiple values. SSH service cannot be started" >> "$STDOUTLOGFILE"
        exit 1
fi

####################
# 5. Invalid value #
####################
CMDOUT=$(grep -E "^\s*$KEY\s+" $SUBJFILE | head -1 | grep -iP "^\s*$KEY\s+(?!\s*(1|1(\s*,\s*(1|2))+|2|2(\s*,\s*(1|2))+)\s*(#.*)*$)" | wc -l)
if [ "$CMDOUT" -ne 0  ]
then
	echo "[FAIL] $REQ, $KEY has an invalid value. SSH service cannot be started" >> "$STDOUTLOGFILE"
	exit 1
fi

##########################
# 6. Non-Compliant value #
##########################
CMDOUT=$( grep -iE "^\s*$KEY\s+" $SUBJFILE | head -1 | grep -iP "^\s*$KEY\s+(?!\s*(2|2(\s*,\s*2)+)\s*(#.*)*$)" | wc -l)
if [ "$CMDOUT" -ne 0  ]
then
        echo "[FAIL] $REQ, $KEY is not set to 2." >> "$STDOUTLOGFILE"
        exit 1
fi

######################
# 7. Compliant value #
######################
CMDOUT=$( grep -iE "^\s*$KEY\s+" $SUBJFILE | head -1 | grep -iP "^\s*$KEY\s+(2|2(\s*,\s*2)+)\s*(#.*)*$" | wc -l)
if [ "$CMDOUT" -eq 1 ]
then
        echo "[PASS] $REQ, $KEY is set to 2" >> "$STDOUTLOGFILE"
        exit 0
fi

#######################
# 8. Unexpected value #
#######################

# If it comes to this line, it means value input is outside the scope of the testcases
echo "[FAIL] $REQ, $KEY has an unexpected value" >> "$STDOUTLOGFILE"
exit 1
