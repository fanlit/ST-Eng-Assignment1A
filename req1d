#!/bin/bash

#########
# Setup #
#########

DATETIME=$(date "+%d-%m-%y %r")
SUBJFILE='/etc/login.defs'
KEY='PASS_MAX_DAYS'
REQ='1D. Ensure password expiration is 90 days or less'
STDOUTLOGFILE=$1
#echo "" >> "$STDOUTLOGFILE"
#echo "# $REQ. Ensure password expiration is 90 days or less #########################" >> "$STDOUTLOGFILE"
#echo "Subject File: $SUBJFILE" >> "$STDOUTLOGFILE"
#echo "Key: $KEY" >> "$STDOUTLOGFILE"

#############################
# 1: Subject file not found #
#############################
if [ ! -f "$SUBJFILE" ]
then
        echo "[FAIL] $REQ, login.defs not found." >> "$STDOUTLOGFILE"
	exit 1
fi

####################
# 2: Key not found #
####################
if [ $( grep "^\s*$KEY\s*" "$SUBJFILE" | wc -l) -eq 0 ]
then
	echo "[FAIL] $REQ, $KEY cannot be found, default to -1 days" >> "$STDOUTLOGFILE"
	exit 1
fi

#######################################
# 3: Invalid entry (In-line comments) #
#######################################
CMDOUT=$( grep "^\s*$KEY\s*" "$SUBJFILE" | tail -1 | grep -iP "^\s*PASS_MAX_DAYS\s+.*(#.*)$" | wc -l)
if [ "$CMDOUT" -ne 0 ]
then
        echo "[FAIL] $REQ, $KEY has an invalid entry, in-line comments, default to -1 days" >> "$STDOUTLOGFILE"
        exit 1
fi

##########################
# 4: No associated value #
##########################
CMDOUT=$( grep "^\s*$KEY\s*" "$SUBJFILE" | tail -1 | grep "^\s*$KEY\s*$" | wc -l)
if [ "$CMDOUT" -ne 0 ]
then
	echo "[FAIL] $REQ, $KEY has no value, default to -1 days" >> "$STDOUTLOGFILE"
	exit 1
fi

######################
# 5. Multiple values #
######################
CMDOUT=$( grep -E "^\s*$KEY\s+" $SUBJFILE | tail -1 | grep -E "^\s*$KEY\s+(-*\S+\s+\S+\s*)" $SUBJFILE | wc -l)
if [ "$CMDOUT" -ne 0 ]
then
        echo "[FAIL] $REQ, $KEY has multiple values, default to -1 days" >> "$STDOUTLOGFILE"
        exit 1
fi

###############################
# Shared values: Testcase 6-8 #
###############################
TOCONVERT=$(grep -E "^\s*$KEY\s+" $SUBJFILE | tail -1 | awk '{$1=$1};{print $2}')
CONVERTED=$(printf "%d" $TOCONVERT)

###########################################
# 6a. Invalid value (Unconvertable value) #
###########################################
if [ "$?" -ne 0 ]
then
	echo "[FAIL] $REQ, $KEY has an invalid value (Unconvertable value), default to -1 days" >> "$STDOUTLOGFILE"
	exit 1
fi

#####################################
# 6b. Invalid value (Invalid range) #
#####################################
if [[ $CONVERTED -lt -1 || $CONVERTED -gt 99999 ]]
then
	if [ $CONVERTED -lt -1 ]
	then
		echo "[FAIL] $REQ, $KEY has an invalid value (Invalid range), default to -1 days" >>  "$STDOUTLOGFILE"
	else
		echo "[FAIL] $REQ, $KEY has an invalid value (Invalid range)" >> "$STDOUTLOGFILE"
	fi
	exit 1
fi

##########################
# 7. Non-Compliant value #
##########################
if [[ $CONVERTED -eq -1 || $CONVERTED -gt 90 ]]
then
        echo "[FAIL] $REQ, $KEY is not set to 90 days or less" >> "$STDOUTLOGFILE"
        exit 1
fi

######################
# 8. Compliant value #
######################
if [[ $CONVERTED -ge 0 && $CONVERTED -le 90 ]]
then
        echo "[PASS] $REQ, Password expiration is set to 90 days or less" >> "$STDOUTLOGFILE"
        exit 0
fi

#######################
# 8. Unexpected value #
#######################

echo "[FAIL] $REQ, $KEY has an unexpected value" >> "$STDOUTLOGFILE"
exit 1
